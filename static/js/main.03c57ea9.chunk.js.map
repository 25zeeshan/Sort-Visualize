{"version":3,"sources":["algorithm/sortingAlgorithm.js","Components/SortVisualizer.jsx","Components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["getMergeSortAnimation","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","merge","getquickSortAnimations","animation","quickSortHelper","pivot","element","temp","partition","array_size","SortVisualizer","props","state","this","resetArray","width","window","innerWidth","min","max","height","innerHeight","max_height","random","setState","arrayBars","document","getElementsByClassName","bar","style","bar1","setTimeout","backgroundColor","key","getInsertionSortAnimation","flag","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","animationSpeed","tmp","getBubbleSortAnimation","getSelectionSortAnimation","console","log","barIdx","Promise","resolve","reject","then","message","resetColor","selectionSort","catch","err","className","ButtonToolbar","Button","onClick","handleNewArray","bubbleSort","insertionSort","mergeSort","quickSort","map","value","id","Component","Header","handleOnChange","speed","target","Navbar","dark","expand","NavbarBrand","href","type","step","onChange","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.03c57ea9.chunk.js","sourcesContent":["export const getSelectionSortAnimation = (array, animation=[]) => {\n    for(let i=0;i<array.length;i++){\n        var min=i;\n        for(let j=i+1;j<array.length;j++){\n            animation.push(['C1',min,j]);\n            animation.push(['C2',min,j]);\n            min=(array[min] < array[j])?min:j;\n        }\n        animation.push(['S',i,array[min],min,array[i]]);\n        var temp=array[min];\n        array[min] = array[i];\n        array[i] = temp;\n    }\n    return animation;\n};\n\nexport const getBubbleSortAnimation = (array, animation=[]) => {\n    let i,j;\n    for (i = 0; i < array.length; i++) {\n        for (j = 0; j < array.length-i-1; j++) {\n            animation.push(['C1',j,j+1]);\n            animation.push(['C2',j,j+1]);\n            if (array[j] > array[j + 1]) {\n                animation.push(['S',j,array[j+1],j+1,array[j]]);\n                let tmp = array[j];\n                array[j] = array[j + 1];\n                array[j + 1] = tmp;\n            }\n        }\n        animation.push(['CL',j]);\n    }\n    return animation;\n};\n\nexport const getInsertionSortAnimation = (array, animation=[]) => {\n    let i,j;\n    for(i=1;i<array.length;i++){\n        let key;\n        j=i\n        while(j>0 && array[j-1] > array[j]){\n            animation.push(['C1',j-1,j]);\n            animation.push(['C2',j-1,j]);\n            animation.push(['S',j,array[j-1],j-1,array[j]]);\n            key=array[j];\n            array[j] = array[j-1];\n            array[j-1] = key;\n            j--;\n        }\n    }\n    return animation;\n};\n\n\nexport const getMergeSortAnimation = (array) => {\n    const animations = [];\n    if (array.length <= 1) \n        return array;\n    const auxiliaryArray = array.slice();\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n    return animations;\n  }\n\nfunction mergeSortHelper(mainArray, startIdx, endIdx, auxiliaryArray, animations,) {\n    if (startIdx === endIdx) \n        return;\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n    merge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction merge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations,) {\n    let k = startIdx;\n    let i = startIdx;\n    let j = middleIdx + 1;\n    while (i <= middleIdx && j <= endIdx) {\n        animations.push(['C1',i, j]);\n        animations.push(['C2',i, j]);\n        if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n            animations.push(['S',k, auxiliaryArray[i]]);\n            mainArray[k++] = auxiliaryArray[i++];\n        } \n        else {\n            animations.push(['S',k, auxiliaryArray[j]]);\n            mainArray[k++] = auxiliaryArray[j++];\n        }\n    }\n    while (i <= middleIdx) {\n        animations.push(['C1',i, i]);\n        animations.push(['C2',i, i]);\n        animations.push(['S',k, auxiliaryArray[i]]);\n        mainArray[k++] = auxiliaryArray[i++];\n    }\n    while (j <= endIdx) {\n        animations.push(['C1',j, j]);\n        animations.push(['C2',j, j]);\n        animations.push(['S',k, auxiliaryArray[j]]);\n        mainArray[k++] = auxiliaryArray[j++];\n    }\n}\n\n\nexport const getquickSortAnimations = (array) => {\n    const animation=[]\n    quickSortHelper(array,0,array.length-1,animation);\n    return animation;\n}\n\nfunction quickSortHelper(array, startIdx, endIdx,animation) {\n    if(startIdx <= endIdx){\n        let pivot = partition(array,startIdx,endIdx,animation);\n        quickSortHelper(array,startIdx,pivot-1,animation);\n        quickSortHelper(array,pivot+1,endIdx,animation);\n    }\n}\n\nfunction partition(array,startIdx,endIdx,animation){\n    const element = array[endIdx];\n    let k=startIdx-1;\n    for(let i=startIdx;i<endIdx;i++){\n        if(array[i] < element){\n            animation.push(['C1',i,endIdx]);\n            animation.push(['C2',i,endIdx]);\n            k++;\n            animation.push(['S',k,array[i],i,array[k]]);\n            let temp = array[k];\n            array[k] = array[i];\n            array[i] = temp;\n        }\n    }\n    animation.push(['S',k+1,array[endIdx],endIdx,array[k+1]]);\n    animation.push(['CL',k+1]);\n    let temp = array[k+1];\n    array[k+1] = array[endIdx];\n    array[endIdx] = temp;\n    \n\n    return (k+1);\n\n}","import React, {Component} from 'react';\nimport '../css/SortVisualizer.css';\nimport {getSelectionSortAnimation, getquickSortAnimations, getBubbleSortAnimation, getInsertionSortAnimation, getMergeSortAnimation} from '../algorithm/sortingAlgorithm.js';\nimport { Button, ButtonToolbar } from 'reactstrap';\n\nlet array_size=0;\n\nfunction randomInt(min,max){\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nclass SortVisualizer extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            array: [],\n        };\n    }\n    \n    componentDidMount(){\n        this.resetArray();\n    }\n\n    resetArray(){\n        const array=[];\n\n        const width = window.innerWidth;\n        array_size = Math.floor((0.7 * width)/4);\n\n        const height = window.innerHeight;\n        let max_height = Math.floor(0.7 * height);\n\n        for(let i=0;i<array_size;i++){\n            array.push(randomInt(20,max_height));\n        }\n        this.setState({array});\n    }\n\n    resetColor(){\n        const arrayBars = document.getElementsByClassName('vertical-bars');\n        for(let i=0;i<array_size;i++){\n\n            if(i!==array_size-1){\n                const bar = arrayBars[i].style;\n                const bar1 = arrayBars[i+1].style;\n                setTimeout(() => {\n                    bar1.backgroundColor = \"red\";\n                    bar.backgroundColor = \"lightblue\";\n                },i * 1);\n            }\n            else{\n                const bar = arrayBars[i].style;\n                setTimeout(() => {\n                    bar.backgroundColor = \"lightblue\";\n                },i * 1);\n            }\n        }\n    }\n\n    insertionSort(){\n        const animation = getInsertionSortAnimation(this.state.array);\n        const arrayBars = document.getElementsByClassName('vertical-bars');\n        for (let i = 0; i < animation.length; i++) {\n            const flag = animation[i][0];\n            \n            if(flag === 'C1' || flag==='C2'){\n                const barOneIdx = animation[i][1];\n                const barTwoIdx = animation[i][2];\n                const barOneStyle = arrayBars[barOneIdx].style;\n                const barTwoStyle = arrayBars[barTwoIdx].style;\n                \n                setTimeout(() => {\n                    var color;\n                    if(i===0)\n                        color='red';\n                    else\n                        color = (flag==='C2')? 'lightgreen': 'red';\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                }, i * this.props.animationSpeed/10);\n                \n            }\n            if(flag === 'S'){\n                setTimeout(() => {\n                    const barOneIdx = animation[i][1];\n                    const barTwoIdx = animation[i][3];\n                    const barOneStyle = arrayBars[barOneIdx].style;\n                    const barTwoStyle = arrayBars[barTwoIdx].style;\n                    barOneStyle.height = `${animation[i][2]}px`;\n                    barTwoStyle.height = `${animation[i][4]}px`;\n                }, i * this.props.animationSpeed/10);\n            }\n        }\n    }\n\n    bubbleSort(){\n        \n        const animation = getBubbleSortAnimation(this.state.array);\n        const arrayBars = document.getElementsByClassName('vertical-bars');\n\n        for (let i = 0; i < animation.length; i++) {\n            const flag = animation[i][0];\n            \n            if(flag === 'C1' || flag==='C2'){\n                const barOneIdx = animation[i][1];\n                const barTwoIdx = animation[i][2];\n                const barOneStyle = arrayBars[barOneIdx].style;\n                const barTwoStyle = arrayBars[barTwoIdx].style;\n                \n                setTimeout(() => {\n                    var color;\n                    if(i===0)\n                        color='red';\n                    else\n                        color = (flag==='C2')? 'lightblue': 'red';\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                }, i * this.props.animationSpeed/10);\n                \n            }\n            if(flag === 'S'){\n                setTimeout(() => {\n                    const barOneIdx = animation[i][1];\n                    const barTwoIdx = animation[i][3];\n                    const barOneStyle = arrayBars[barOneIdx].style;\n                    const barTwoStyle = arrayBars[barTwoIdx].style;\n                    barOneStyle.height = `${animation[i][2]}px`;\n                    barTwoStyle.height = `${animation[i][4]}px`;\n                }, i * this.props.animationSpeed/10);\n            }\n            if(flag==='CL'){\n                setTimeout(() =>{\n                    const barOneIdx = animation[i][1];\n                    const barOneStyle = arrayBars[barOneIdx].style;\n                    barOneStyle.backgroundColor = 'lightgreen';\n                },i * this.props.animationSpeed/10);\n            }\n\n        }\n    }\n\n    selectionSort(){ \n        \n        const animation = getSelectionSortAnimation(this.state.array);\n        const arrayBars = document.getElementsByClassName('vertical-bars');\n        \n        for (let i = 0; i < animation.length; i++) {\n            const flag = animation[i][0];\n            \n            if(flag === 'C1' || flag==='C2'){\n                const barOneIdx = animation[i][1];\n                const barTwoIdx = animation[i][2];\n                const barOneStyle = arrayBars[barOneIdx].style;\n                const barTwoStyle = arrayBars[barTwoIdx].style;\n                \n                setTimeout(() => {\n                    var color;\n                    if(i===0)\n                        color='red';\n                    else\n                        color = (flag==='C2')? 'lightblue': 'red';\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                }, i * this.props.animationSpeed/10);\n                \n            }\n            if(flag === 'S'){\n                setTimeout(() => {\n                    const barOneIdx = animation[i][1];\n                    const barTwoIdx = animation[i][3];\n                    const barOneStyle = arrayBars[barOneIdx].style;\n                    const barTwoStyle = arrayBars[barTwoIdx].style;\n                    barOneStyle.height = `${animation[i][2]}px`;\n                    barTwoStyle.height = `${animation[i][4]}px`;\n                    barOneStyle.backgroundColor = 'lightgreen';\n                }, i * this.props.animationSpeed/10);\n            }\n        }\n            \n        \n    }\n\n    mergeSort(){\n        const animation = getMergeSortAnimation(this.state.array);\n        const arrayBars = document.getElementsByClassName('vertical-bars');\n        for(let i=0;i<animation.length;i++){\n            const flag = animation[i][0];\n            \n            if(flag === 'C1' || flag==='C2'){\n                const barOneIdx = animation[i][1];\n                const barTwoIdx = animation[i][2];\n                const barOneStyle = arrayBars[barOneIdx].style;\n                const barTwoStyle = arrayBars[barTwoIdx].style;\n                \n                setTimeout(() => {\n                    var color;\n                    if(i===0)\n                        color='red';\n                    else\n                        color = (flag==='C2')? 'lightgreen': 'red';\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                }, i * this.props.animationSpeed/10);\n                \n            }\n            if(flag === 'S'){\n                setTimeout(() => {\n                    const barOneIdx = animation[i][1];\n                    const barOneStyle = arrayBars[barOneIdx].style;\n                    barOneStyle.height = `${animation[i][2]}px`;\n                }, i * this.props.animationSpeed/10);\n            }\n        }\n    }\n\n    quickSort(){\n        const animation = getquickSortAnimations(this.state.array);\n        const arrayBars = document.getElementsByClassName('vertical-bars');\n\n        console.log(animation);\n\n        for (let i = 0; i < animation.length; i++) {\n            const flag = animation[i][0];\n            \n            if(flag === 'C1' || flag==='C2'){\n                const barOneIdx = animation[i][1];\n                const barTwoIdx = animation[i][2];\n                const barOneStyle = arrayBars[barOneIdx].style;\n                const barTwoStyle = arrayBars[barTwoIdx].style;\n                \n                setTimeout(() => {\n                    var color;\n                    if(i===0)\n                        color='red';\n                    else\n                        color = (flag==='C2')? 'lightblue': 'red';\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                }, i * this.props.animationSpeed/10);\n                \n            }\n            if(flag === 'S'){\n                setTimeout(() => {\n                    const barOneIdx = animation[i][1];\n                    const barTwoIdx = animation[i][3];\n                    const barOneStyle = arrayBars[barOneIdx].style;\n                    const barTwoStyle = arrayBars[barTwoIdx].style;\n                    barOneStyle.height = `${animation[i][2]}px`;\n                    barTwoStyle.height = `${animation[i][4]}px`;\n                }, i * this.props.animationSpeed/10);\n            }\n            if(flag === 'CL'){\n                setTimeout(() => {\n                    const barIdx = animation[i][1];\n                    const barStyle = arrayBars[barIdx].style;\n                    barStyle.backgroundColor = \"lightgreen\";\n                }, i* this.props.animationSpeed/10);\n            }\n        }\n    }\n\n    handleNewArray(){\n        let newArrayPromise = new Promise((resolve, reject) => {\n            this.resetArray();\n            resolve(\"Reset Array Done\");\n        });\n        newArrayPromise.then((message) => {\n            console.log(message);\n            this.resetColor();\n        })\n    }\n\n    handleSelectionSort(){\n\n        let newArrayPromise = new Promise((resolve, reject) => {\n            this.selectionSort();\n            resolve(\"selection sort Done\");\n        });\n        newArrayPromise.then((message) => {\n            console.log(message);\n            this.resetColor();\n            console.log(\"reset color done\");\n        }).catch((err) => { console.log(err) });\n    }\n\n    render(){\n        const array = this.state.array;\n        return(\n            <>\n                <div className=\"buttons\">\n                    <ButtonToolbar>\n                        <Button className=\"buttons\" color=\"danger\" onClick={() => this.handleNewArray() }>Generate New Array</Button>\n                        <Button onClick={() => this.selectionSort() }>Selection Sort</Button>\n                        <Button color=\"success\" onClick={() => this.bubbleSort() }>Bubble Sort</Button>\n                        <Button onClick={() => this.insertionSort() }>Insertion Sort</Button>\n                        <Button color=\"success\" onClick={() => this.mergeSort() }>Merge Sort</Button>\n                        <Button onClick={() => this.quickSort() }>Quick Sort</Button>\n                    </ButtonToolbar>\n                </div>\n                <div className=\"array-container\">\n                    {array.map((value, id) => {\n                        \n                        return (\n                            <div \n                                className=\"vertical-bars\"\n                                key={id}\n                                style={{height: `${value}px`}}>\n                            </div>\n                        );\n                    })}\n                </div>\n               \n            </>\n        );\n    }\n}\n\nexport default SortVisualizer;","import React, {Component} from 'react';\nimport { Navbar, NavbarBrand } from 'reactstrap';\n\nimport SortVisualizer from './SortVisualizer';\nimport '../css/Header.css';\n\nclass Header extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            speed:25\n        }\n    }\n\n    handleOnChange = (value) =>{\n        this.setState({speed: value.target.value});\n    }\n\n    render(){\n        let  { speed } = this.state;\n        return(\n            <>\n                <Navbar dark expand=\"md\" className=\"Navbar\">\n                    <div className=\"container\">\n                        <NavbarBrand href=\"/\">\n                            Sort Visualizer\n                        </NavbarBrand>\n                        <div className=\"slidecontainer\">\n                            Sorting Speed:\n                            <input type=\"range\" id=\"reversed\" min={0.1} max={50} step={0.1} value={speed} className=\"slider\" onChange={this.handleOnChange}/>\n                        </div>\n                    </div>\n                </Navbar>\n                <SortVisualizer animationSpeed={this.state.speed}/>\n            </>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport './App.css';\n\nimport Header from './Components/Header'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}